<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Standing on the shoulders of giants</title><link>http://matthieuchoplin.github.io/</link><description>Blog about my developer experience</description><language>en</language><lastBuildDate>Mon, 09 Jun 2014 10:31:56 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Git</title><link>http://matthieuchoplin.github.io/posts/git.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;pre class="code bash literal-block"&gt;
git log --graph --all --format&lt;span class="o"&gt;=&lt;/span&gt;format:&lt;span class="s2"&gt;"%x09%C(yellow)%h%C(reset) %C(green)%ai%x08%x08%x08%x08%x08%x08%C(reset) %C(bold white)%cn%C(reset)%C(magenta)%d%C(reset)%n%x09%C(white)%s%C(reset)"&lt;/span&gt; --abbrev-commit &lt;span class="s2"&gt;"$@"&lt;/span&gt;
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;</description><category>git</category><guid>http://matthieuchoplin.github.io/posts/git.html</guid><pubDate>Fri, 06 Jun 2014 16:09:03 GMT</pubDate></item><item><title>The watch command</title><link>http://matthieuchoplin.github.io/posts/the-watch-command.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;pre class="code bash literal-block"&gt;
watch -n1 &lt;span class="s1"&gt;' ps aux | grep what_you_want'&lt;/span&gt;
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;</description><guid>http://matthieuchoplin.github.io/posts/the-watch-command.html</guid><pubDate>Thu, 05 Jun 2014 14:59:51 GMT</pubDate></item><item><title>Extract list of installed packages</title><link>http://matthieuchoplin.github.io/posts/extract-list-of-installed-packages.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;pre class="code bash literal-block"&gt;
dpkg-query -l | awk &lt;span class="s1"&gt;'{print $2 $3}'&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Notice the combinatin of dpkg-query and awk!&lt;/p&gt;</description><guid>http://matthieuchoplin.github.io/posts/extract-list-of-installed-packages.html</guid><pubDate>Thu, 05 Jun 2014 14:03:35 GMT</pubDate></item><item><title>Port forwarding</title><link>http://matthieuchoplin.github.io/posts/port-forwarding.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div class="section" id="proxy-configuration"&gt;
&lt;h2&gt;Proxy configuration&lt;/h2&gt;
&lt;pre class="code bash literal-block"&gt;
ssh -D 8888 youruser@yourserver.com
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="for-firefox"&gt;
&lt;h2&gt;For Firefox&lt;/h2&gt;
&lt;p&gt;Install foxyproxy addons.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="for-chrome"&gt;
&lt;h2&gt;For Chrome&lt;/h2&gt;
&lt;p&gt;Install Foxy Proxy standard:
&lt;a class="reference external" href="https://chrome.google.com/webstore/detail/foxyproxy-standard/gcknhkkoolaabfmlnjonogaaifnjlfnp"&gt;https://chrome.google.com/webstore/detail/foxyproxy-standard/gcknhkkoolaabfmlnjonogaaifnjlfnp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then in Tools | Extensions | Options of FoxyProxy, change the settings.&lt;/p&gt;
&lt;dl class="docutils"&gt;&lt;dt&gt;Other links:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;&lt;li&gt;&lt;a class="reference external" href="http://fr.flossmanuals.net/comment-contourner-la-censure-sur-internet/ch019_reglages-proxy-et-foxyproxy"&gt;http://fr.flossmanuals.net/comment-contourner-la-censure-sur-internet/ch019_reglages-proxy-et-foxyproxy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/dd&gt;
&lt;/dl&gt;&lt;/div&gt;</description><category>internet</category><guid>http://matthieuchoplin.github.io/posts/port-forwarding.html</guid><pubDate>Thu, 05 Jun 2014 13:21:55 GMT</pubDate></item><item><title>Progress bar in python</title><link>http://matthieuchoplin.github.io/posts/progress-bar-in-python.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;p&gt;Writing 'r' will move the cursor back to the beginning of the line.&lt;/p&gt;
&lt;p&gt;This displays a percentage counter:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\r&lt;/span&gt;&lt;span class="si"&gt;%d%%&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Sourcce: &lt;a class="reference external" href="http://stackoverflow.com/questions/3173320/text-progress-bar-in-the-console"&gt;http://stackoverflow.com/questions/3173320/text-progress-bar-in-the-console&lt;/a&gt;&lt;/p&gt;</description><category>python</category><guid>http://matthieuchoplin.github.io/posts/progress-bar-in-python.html</guid><pubDate>Thu, 05 Jun 2014 08:25:49 GMT</pubDate></item><item><title>VIM</title><link>http://matthieuchoplin.github.io/posts/vim.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div class="section" id="vim-basics"&gt;
&lt;h2&gt;VIM basics&lt;/h2&gt;
&lt;p&gt;The built in tutorial of Vim is very useful to know the basics. To launch it simply type the following in your terminal:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nv"&gt;$vimtutor&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;It will launch some lessons with an approach 'learning by doing'.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="configuration"&gt;
&lt;h2&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The ~/.vimrc file provides Vim's default configuration&lt;/p&gt;
&lt;/div&gt;</description><guid>http://matthieuchoplin.github.io/posts/vim.html</guid><pubDate>Wed, 04 Jun 2014 21:51:32 GMT</pubDate></item><item><title>Symbolic links</title><link>http://matthieuchoplin.github.io/posts/symbolic-links.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;p&gt;Find broken symlinks and delete them&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nv"&gt;$find&lt;/span&gt; -L /path/to/check -type l -delete
&lt;/pre&gt;
&lt;p&gt;List them&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nv"&gt;$find&lt;/span&gt; -L /path -type l
&lt;/pre&gt;
&lt;p&gt;If you want to delete them with confirmation first, do&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
find -L /path -type l -exec rm -i &lt;span class="o"&gt;{}&lt;/span&gt; +
&lt;/pre&gt;</description><category>sysadmin</category><guid>http://matthieuchoplin.github.io/posts/symbolic-links.html</guid><pubDate>Wed, 04 Jun 2014 21:38:08 GMT</pubDate></item><item><title>Blog creation</title><link>http://matthieuchoplin.github.io/posts/blog-creation.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div class="section" id="website-hosted-from-my-github-repository"&gt;
&lt;h2&gt;Website hosted from my Github Repository&lt;/h2&gt;
&lt;p&gt;It is using &lt;a class="reference external" href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt;.
Create a repository called &lt;em&gt;username.github.io&lt;/em&gt;, where username is your username (or organization name) on GitHub and put your website files in there.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="website-generation-using-a-python-framework-nikola"&gt;
&lt;h2&gt;Website generation using a Python framework: Nikola&lt;/h2&gt;
&lt;p&gt;This website is using &lt;a class="reference external" href="http://getnikola.com"&gt;Nikola&lt;/a&gt; which is a Python static website generator.
Assuming that you have created a github repository called &lt;em&gt;username.github.io&lt;/em&gt;, clone it with:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
git clone git@github.com:username/username.github.io.git
&lt;/pre&gt;
&lt;p&gt;Then initialize your website with this command:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
nikola init username.github.io
&lt;/pre&gt;
&lt;p&gt;where &lt;em&gt;username.github.io&lt;/em&gt; is the repository you have just cloned.&lt;/p&gt;
&lt;p&gt;cd in this directory and execute this command:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
nikola build &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; nikola serve -b
&lt;/pre&gt;
&lt;p&gt;The website will open at the url &lt;a class="reference external" href="http://127.0.0.1:8000"&gt;http://127.0.0.1:8000&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To deploy to Github, change the file conf.py such as:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nv"&gt;GITHUB_DEPLOY_BRANCH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'master'&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Once you are happy with it, you can deploy to Github with the command:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
nikola github_deploy
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="posts-written-using-restructuredtext"&gt;
&lt;h2&gt;Posts written using reStructuredText&lt;/h2&gt;
&lt;p&gt;Useful cheatsheet for the basics: &lt;a class="reference external" href="http://docutils.sourceforge.net/docs/user/rst/cheatsheet.txt"&gt;http://docutils.sourceforge.net/docs/user/rst/cheatsheet.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is also a way to learn how to use Vim. Since Nikola 7.0.1, you can use the -e option when creating a new post.
But before, you need to set up a default editor.
If you want to use vim, you can first locate it:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
which vim
&lt;/pre&gt;
&lt;p&gt;Then you can use it in the export variable:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;EDITOR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/bin/vim
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="download-a-pre-built-template-from-bootswatch"&gt;
&lt;h2&gt;Download a pre-built template from bootswatch&lt;/h2&gt;
&lt;pre class="code bash literal-block"&gt;
nikola bootswatch_theme -n custom_theme -s spruce -p bootstrap3
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="upgrading-nikola"&gt;
&lt;h2&gt;Upgrading Nikola&lt;/h2&gt;
&lt;p&gt;Since Nikola can be installed with Pip, you can use the following command:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
pip install -U nikola
&lt;/pre&gt;
&lt;p&gt;As a reminder, pip is installed using setuptools and easyinstall:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo easy install pip
&lt;/pre&gt;
&lt;p&gt;To upgrade pip:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo easy_install -U pip
&lt;/pre&gt;
&lt;p&gt;To downgrade pip to a previous version:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
sudo easy_install &lt;span class="nv"&gt;pip&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;1.2.1
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>Nikola</category><category>blog</category><guid>http://matthieuchoplin.github.io/posts/blog-creation.html</guid><pubDate>Sun, 25 May 2014 08:30:00 GMT</pubDate></item></channel></rss>