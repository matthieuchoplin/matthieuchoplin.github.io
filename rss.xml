<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Standing on the shoulders of giants</title><link>http://mattchoplin.com/</link><description>Blog about my developer experience</description><atom:link href="http://mattchoplin.com/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Fri, 30 Jun 2017 11:43:30 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Python and Google spreadsheet</title><link>http://mattchoplin.com/posts/python-and-google-spreadsheet.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div&gt;&lt;ul class="simple"&gt;
&lt;li&gt;gspread: see &lt;a class="reference external" href="https://www.twilio.com/blog/2017/02/an-easy-way-to-read-and-write-to-a-google-spreadsheet-in-python.html"&gt;https://www.twilio.com/blog/2017/02/an-easy-way-to-read-and-write-to-a-google-spreadsheet-in-python.html&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/burnash/gspread"&gt;https://github.com/burnash/gspread&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;google-api-python-client: &lt;a class="reference external" href="https://www.youtube.com/watch?v=VLdrgE8iJZI&amp;amp;t=1s"&gt;https://www.youtube.com/watch?v=VLdrgE8iJZI&amp;amp;t=1s&lt;/a&gt; and &lt;a class="reference external" href="https://developers.google.com/sheets/api/quickstart/python?utm_campaign=drive_launch_google_sheets_api_061416&amp;amp;utm_source=gdev&amp;amp;utm_medium=yt-desc"&gt;https://developers.google.com/sheets/api/quickstart/python?utm_campaign=drive_launch_google_sheets_api_061416&amp;amp;utm_source=gdev&amp;amp;utm_medium=yt-desc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><guid>http://mattchoplin.com/posts/python-and-google-spreadsheet.html</guid><pubDate>Tue, 27 Jun 2017 14:08:18 GMT</pubDate></item><item><title>Skype with Python</title><link>http://mattchoplin.com/posts/skype-with-python.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div&gt;&lt;div class="section" id="create-the-virtualenv"&gt;
&lt;h2&gt;Create the virtualenv&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_94f90709c4844e80aa9f18c1febebf3f-1"&gt;&lt;/a&gt;virtualenv skype_venv -p /usr/bin/python2.7 --system-site-packages
&lt;/pre&gt;&lt;p&gt;Note that I am specyfying the python2 interpreter, and using the system site packages (&lt;a class="reference external" href="https://virtualenv.pypa.io/en/stable/userguide/#the-system-site-packages-option/"&gt;the python libraries already installed&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="install-the-skype4py-library"&gt;
&lt;h2&gt;Install the Skype4Py library&lt;/h2&gt;
&lt;p&gt;You can install it with pip.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_c19a0439955d4072966fc6cd4fe9b1f0-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;source&lt;/span&gt; skype_venv/bin/activate
&lt;a name="rest_code_c19a0439955d4072966fc6cd4fe9b1f0-2"&gt;&lt;/a&gt;pip install Skype4Py
&lt;/pre&gt;&lt;p&gt;Note that this library allows us to control Skype client application. It means that you will need to have a skype client installed with which you will interact using python.&lt;/p&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://pypi.python.org/pypi/Skype4Py/"&gt;https://pypi.python.org/pypi/Skype4Py/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="use-the-library"&gt;
&lt;h2&gt;Use the library&lt;/h2&gt;
&lt;p&gt;Open your skype client and launch a python prompt&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_8f02747714ce434daf9a2d21b5f76cc0-1"&gt;&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt; import Skype4Py
&lt;a name="rest_code_8f02747714ce434daf9a2d21b5f76cc0-2"&gt;&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span class="nv"&gt;skype&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Skype4Py.Skype&lt;span class="o"&gt;()&lt;/span&gt;
&lt;a name="rest_code_8f02747714ce434daf9a2d21b5f76cc0-3"&gt;&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt; skype.Attach&lt;span class="o"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;At this point, the Skype client will ask for authorization:&lt;/p&gt;
&lt;img alt="Skype4Py authorisation" class="well-large align-center" src="http://imgur.com/gKj46yz.png"&gt;
&lt;p&gt;And now, you can for example get the list of all your contacts:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_b35c42f2c01141389c57e0e9dea15806-1"&gt;&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt; print &lt;span class="s1"&gt;'Your full name:'&lt;/span&gt;, skype.CurrentUser.FullName
&lt;a name="rest_code_b35c42f2c01141389c57e0e9dea15806-2"&gt;&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt; print &lt;span class="s1"&gt;'Your contacts:'&lt;/span&gt;
&lt;a name="rest_code_b35c42f2c01141389c57e0e9dea15806-3"&gt;&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span class="k"&gt;for&lt;/span&gt; user in skype.Friends:
&lt;a name="rest_code_b35c42f2c01141389c57e0e9dea15806-4"&gt;&lt;/a&gt;        print &lt;span class="s1"&gt;'    '&lt;/span&gt;, user.FullName
&lt;/pre&gt;&lt;p&gt;To go further:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://leakforums.net/thread-641974?tid=641974&amp;amp;&amp;amp;tid=641974&amp;amp;&amp;amp;pq=2"&gt;https://leakforums.net/thread-641974?tid=641974&amp;amp;&amp;amp;tid=641974&amp;amp;&amp;amp;pq=2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://sinister.ly/Thread-Tutorial-Create-your-own-SkypeBOT"&gt;https://sinister.ly/Thread-Tutorial-Create-your-own-SkypeBOT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://media.readthedocs.org/pdf/sevabot-skype-bot/latest/sevabot-skype-bot.pdf"&gt;https://media.readthedocs.org/pdf/sevabot-skype-bot/latest/sevabot-skype-bot.pdf&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>skype</category><guid>http://mattchoplin.com/posts/skype-with-python.html</guid><pubDate>Sat, 17 Jun 2017 09:28:07 GMT</pubDate></item><item><title>Using pip with different python versions</title><link>http://mattchoplin.com/posts/using-pip-with-different-python-versions.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div&gt;&lt;p&gt;Let us say that you have python2 and python3 installed.&lt;/p&gt;
&lt;p&gt;Use pip for python2&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_6524ec74d42345079ada664547ce54a3-1"&gt;&lt;/a&gt;pip2.6 install otherpackage
&lt;a name="rest_code_6524ec74d42345079ada664547ce54a3-2"&gt;&lt;/a&gt;pip2.7 install mybarpackage
&lt;/pre&gt;&lt;p&gt;You can see which version of python pip is using by default with:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_de037fac07ac4a2c8369663745789f4b-1"&gt;&lt;/a&gt;pip -V
&lt;/pre&gt;&lt;p&gt;Source: &lt;a class="reference external" href="http://stackoverflow.com/questions/6504810/how-to-install-lxml-on-ubuntu?answertab=votes#tab-top"&gt;http://stackoverflow.com/questions/6504810/how-to-install-lxml-on-ubuntu?answertab=votes#tab-top&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><guid>http://mattchoplin.com/posts/using-pip-with-different-python-versions.html</guid><pubDate>Fri, 28 Apr 2017 10:33:19 GMT</pubDate></item><item><title>Introspection in python</title><link>http://mattchoplin.com/posts/introspection-in-python.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div&gt;&lt;p&gt;Imagine that you are debugging and that you want to know the methods that you can call on an object, this pseudo code can be helpful. Here "some_object" is any python object:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_24e008839d56499abb1781779bf98a11-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;some_object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;callable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;some_object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Source: &lt;a class="reference external" href="http://www.diveintopython.net/power_of_introspection/index.html"&gt;http://www.diveintopython.net/power_of_introspection/index.html&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><guid>http://mattchoplin.com/posts/introspection-in-python.html</guid><pubDate>Tue, 25 Apr 2017 11:43:16 GMT</pubDate></item><item><title>How to get the first/last day of the previous month?</title><link>http://mattchoplin.com/posts/how-to-get-the-firstlast-day-of-the-previous-month.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;pre class="code python"&gt;&lt;a name="rest_code_d4e4596cf6e44ee1826b338cca3cec35-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;
&lt;a name="rest_code_d4e4596cf6e44ee1826b338cca3cec35-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dateutil.relativedelta&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;relativedelta&lt;/span&gt;
&lt;a name="rest_code_d4e4596cf6e44ee1826b338cca3cec35-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;today&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_d4e4596cf6e44ee1826b338cca3cec35-4"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;today&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;relativedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;months&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d4e4596cf6e44ee1826b338cca3cec35-5"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d4e4596cf6e44ee1826b338cca3cec35-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d4e4596cf6e44ee1826b338cca3cec35-7"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;relativedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;days&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d4e4596cf6e44ee1826b338cca3cec35-8"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d4e4596cf6e44ee1826b338cca3cec35-9"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;</description><guid>http://mattchoplin.com/posts/how-to-get-the-firstlast-day-of-the-previous-month.html</guid><pubDate>Wed, 05 Apr 2017 15:55:47 GMT</pubDate></item><item><title>Abstraction in python</title><link>http://mattchoplin.com/posts/abstraction-in-python.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div&gt;&lt;p&gt;For example, when copying files:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_d3bc19d92fab4f7492263ad2780cde5f-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;shutil&lt;/span&gt;
&lt;a name="rest_code_d3bc19d92fab4f7492263ad2780cde5f-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;shutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'file.txt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'copy.txt'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;It is much more abstract (and simpler) to use the &lt;em&gt;shutil&lt;/em&gt; library than:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_a6577345960547178514e08ac98b8ebc-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'rb'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fsrc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_a6577345960547178514e08ac98b8ebc-2"&gt;&lt;/a&gt;    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'wb'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fdst&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_a6577345960547178514e08ac98b8ebc-3"&gt;&lt;/a&gt;        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_a6577345960547178514e08ac98b8ebc-4"&gt;&lt;/a&gt;            &lt;span class="n"&gt;buf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fsrc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buf_size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_a6577345960547178514e08ac98b8ebc-5"&gt;&lt;/a&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_a6577345960547178514e08ac98b8ebc-6"&gt;&lt;/a&gt;                &lt;span class="k"&gt;break&lt;/span&gt;
&lt;a name="rest_code_a6577345960547178514e08ac98b8ebc-7"&gt;&lt;/a&gt;            &lt;span class="n"&gt;fdst&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><guid>http://mattchoplin.com/posts/abstraction-in-python.html</guid><pubDate>Tue, 04 Apr 2017 11:43:16 GMT</pubDate></item><item><title>Sorting a list with two criteria in python</title><link>http://mattchoplin.com/posts/sorting-list-with-two-criteria.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div&gt;&lt;p&gt;We want to sort a list of elements with the first element in ascending order and the second element in descending order.&lt;/p&gt;
&lt;div class="section" id="using-the-lambda-function"&gt;
&lt;h2&gt;Using the lambda function:&lt;/h2&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_27a91a458d044d2b8b422508d5614a23-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;occurences&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'bat'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'mat'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'cat'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_27a91a458d044d2b8b422508d5614a23-2"&gt;&lt;/a&gt;&lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;occurences&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;The -x[1] is for the reversed sort.&lt;/p&gt;
&lt;p&gt;By order of priority, we first sort with the 2nd element (x[1]), then with the 1st element (x[0])&lt;/p&gt;
&lt;p&gt;Example for an interview question:&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>python</category><guid>http://mattchoplin.com/posts/sorting-list-with-two-criteria.html</guid><pubDate>Sun, 11 Dec 2016 10:26:07 GMT</pubDate></item><item><title>Control the screen brightness in Ubuntu</title><link>http://mattchoplin.com/posts/control-the-screen-brightness-in-ubuntu.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div&gt;&lt;p&gt;Controlling the brightness of your screen not working after installing Ubuntu on a laptop equipped with an Intel graphics card?&lt;/p&gt;
&lt;p&gt;You can solve that through the Xorg configuration.&lt;/p&gt;
&lt;p&gt;First, look at your PCI bus, in order to identify your card:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_dc01983e85714c2988c066c73141537c-1"&gt;&lt;/a&gt;$ lspci &lt;span class="p"&gt;|&lt;/span&gt; grep -i vga
&lt;a name="rest_code_dc01983e85714c2988c066c73141537c-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_dc01983e85714c2988c066c73141537c-3"&gt;&lt;/a&gt;&lt;span class="m"&gt;00&lt;/span&gt;:02.0 VGA compatible controller: Intel Corporation 2nd Generation Core Processor Family Integrated Graphics Controller &lt;span class="o"&gt;(&lt;/span&gt;rev &lt;span class="m"&gt;09&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;That's how it looks on my machine. I am interested in the Intel card, so I need to remember its bus id &lt;em&gt;00:02.0&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Next you need to create the config file:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_e65060cc5da44c5d945bcda022d74498-1"&gt;&lt;/a&gt;$ sudo nano /usr/share/X11/xorg.conf.d/20-intel.conf
&lt;/pre&gt;&lt;p&gt;and put the following content in, which will tell the xorg driver to use intel_backlight:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_eb40f3288296427a99fb805dac266193-1"&gt;&lt;/a&gt;Section &lt;span class="s2"&gt;"Device"&lt;/span&gt;
&lt;a name="rest_code_eb40f3288296427a99fb805dac266193-2"&gt;&lt;/a&gt;        Identifier      &lt;span class="s2"&gt;"card0"&lt;/span&gt;
&lt;a name="rest_code_eb40f3288296427a99fb805dac266193-3"&gt;&lt;/a&gt;        Driver          &lt;span class="s2"&gt;"intel"&lt;/span&gt;
&lt;a name="rest_code_eb40f3288296427a99fb805dac266193-4"&gt;&lt;/a&gt;        Option          &lt;span class="s2"&gt;"Backlight"&lt;/span&gt; &lt;span class="s2"&gt;"intel_backlight"&lt;/span&gt;
&lt;a name="rest_code_eb40f3288296427a99fb805dac266193-5"&gt;&lt;/a&gt;        BusID           &lt;span class="s2"&gt;"PCI:0:2:0"&lt;/span&gt;
&lt;a name="rest_code_eb40f3288296427a99fb805dac266193-6"&gt;&lt;/a&gt;EndSection
&lt;/pre&gt;&lt;p&gt;Please note that the BusID should match.&lt;/p&gt;
&lt;p&gt;Save, restart your Xorg:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;find which display manager your ubuntu is having with following command:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_f69f7017d2ae446bad0045062b12a1da-1"&gt;&lt;/a&gt;$ cat /etc/X11/default-display-manager
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;and, for Ubuntu with LightDM:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_b16d78ac9227402abf9463983d5dcf08-1"&gt;&lt;/a&gt;$ sudo restart lightdm
&lt;/pre&gt;&lt;p&gt;It should then work.&lt;/p&gt;
&lt;p&gt;Source:
- &lt;a class="reference external" href="https://float-middle.com/screen-brightness-on-intel-ubuntu-14-04/"&gt;https://float-middle.com/screen-brightness-on-intel-ubuntu-14-04/&lt;/a&gt;
- &lt;a class="reference external" href="http://askubuntu.com/questions/1220/how-to-restart-x-window-server-from-command-line"&gt;http://askubuntu.com/questions/1220/how-to-restart-x-window-server-from-command-line&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>ubuntu</category><guid>http://mattchoplin.com/posts/control-the-screen-brightness-in-ubuntu.html</guid><pubDate>Thu, 23 Jun 2016 22:07:34 GMT</pubDate></item><item><title>Python testing with doctest and unittest</title><link>http://mattchoplin.com/posts/python-testing-with-unittest.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div&gt;&lt;div class="section" id="the-problem"&gt;
&lt;h2&gt;The problem:&lt;/h2&gt;
&lt;p&gt;We want to create a function that is able to determine whether a string is a palindrome.&lt;/p&gt;
&lt;p&gt;A palindrome is a word that is read the same from front-to-back and from back-to-front.&lt;/p&gt;
&lt;p&gt;For instance, the words "noon" and "racecar" are both palindromes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="algorithm"&gt;
&lt;h2&gt;Algorithm:&lt;/h2&gt;
&lt;p&gt;Reverse the string.&lt;/p&gt;
&lt;p&gt;Compare the reversed string to the original string.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="recipe-for-designing-functions"&gt;
&lt;h2&gt;Recipe for designing functions:&lt;/h2&gt;
&lt;ol class="arabic simple" start="0"&gt;
&lt;li&gt;Give the function a name&lt;/li&gt;
&lt;li&gt;Examples&lt;/li&gt;
&lt;li&gt;Type Contract&lt;/li&gt;
&lt;li&gt;Header&lt;/li&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;li&gt;Body&lt;/li&gt;
&lt;li&gt;Test&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;First, we will see the python module &lt;em&gt;doctest&lt;/em&gt; which is good for having an up to date documentation.&lt;/p&gt;
&lt;p&gt;But using &lt;em&gt;doctest&lt;/em&gt; is not recommended for testing a whole program. This is why we will see the python module &lt;em&gt;unittest&lt;/em&gt; which is more relevant.&lt;/p&gt;
&lt;p&gt;For more about the cons of using &lt;em&gt;doctest&lt;/em&gt;: &lt;a class="reference external" href="http://bemusement.org/narrative-tests"&gt;Narrative tests are lousy tests&lt;/a&gt; and &lt;a class="reference external" href="http://bemusement.org/doctests-arent-code"&gt;Tests are code and doctests are not&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Create the file &lt;em&gt;palindrome.py&lt;/em&gt;:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-1"&gt;&lt;/a&gt;&lt;span class="ch"&gt;#! /usr/bin/python2.7&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_palindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-4"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""(str) -&amp;gt; bool&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-6"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    Return True if and only if s is a palindrome.&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-8"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    &amp;gt;&amp;gt;&amp;gt; is_palindrome('noon')&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-9"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    True&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-10"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    &amp;gt;&amp;gt;&amp;gt; is_palindrome('racecar')&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-11"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    True&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-12"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    &amp;gt;&amp;gt;&amp;gt; is_palindrome('dented')&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-13"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    False&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-14"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    """&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-15"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-16"&gt;&lt;/a&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-17"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-18"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""(str) -&amp;gt; str&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-19"&gt;&lt;/a&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-20"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    Return the reversed string.&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-21"&gt;&lt;/a&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-22"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    &amp;gt;&amp;gt;&amp;gt; reverse('hello')&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-23"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    'olleh'&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-24"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    &amp;gt;&amp;gt;&amp;gt; reverse('a')&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-25"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    'a'&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-26"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    """&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-27"&gt;&lt;/a&gt;    &lt;span class="n"&gt;rev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-28"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# for each character in s, add the character at the beginning of rev.&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-29"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;char&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-30"&gt;&lt;/a&gt;        &lt;span class="n"&gt;rev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;char&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;rev&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-31"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;rev&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-32"&gt;&lt;/a&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-33"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;doctest&lt;/span&gt;
&lt;a name="rest_code_0e52c184e3e3487d81c210ab3404d701-34"&gt;&lt;/a&gt;&lt;span class="n"&gt;doctest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;testmod&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;We want to separate the tests from the main program and use the python &lt;em&gt;unittest&lt;/em&gt; module.&lt;/p&gt;
&lt;p&gt;Create the file test_palindromes.py&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-1"&gt;&lt;/a&gt;&lt;span class="ch"&gt;#! /usr/bin/python2.7&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;unittest&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;palindromes&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TestPalindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unittest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TestCase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-9"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_is_palindrome_true&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-10"&gt;&lt;/a&gt;        &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;palindromes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_palindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'racecar'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-11"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEquals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-13"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_is_palindrome_false&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-14"&gt;&lt;/a&gt;        &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;palindromes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_palindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'dedent'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-15"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEquals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-16"&gt;&lt;/a&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-17"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_reverse_normal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-18"&gt;&lt;/a&gt;        &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;palindromes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'hello'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-19"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEquals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'olleh'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-20"&gt;&lt;/a&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-21"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_reverse_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-22"&gt;&lt;/a&gt;        &lt;span class="n"&gt;list_of_bad_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-23"&gt;&lt;/a&gt;        &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-24"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-25"&gt;&lt;/a&gt;        &lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-26"&gt;&lt;/a&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;bad_value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;list_of_bad_value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-27"&gt;&lt;/a&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertRaises&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-28"&gt;&lt;/a&gt;                &lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-29"&gt;&lt;/a&gt;                &lt;span class="n"&gt;palindromes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-30"&gt;&lt;/a&gt;                &lt;span class="n"&gt;bad_value&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-31"&gt;&lt;/a&gt;            &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-32"&gt;&lt;/a&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-33"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_cc1a3ea457bf42afb7db5d828e06eb01-34"&gt;&lt;/a&gt;    &lt;span class="n"&gt;unittest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="choosing-test-cases-to-test"&gt;
&lt;h2&gt;Choosing test cases to test&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Size: For collections, test with an empty collection, a collection with 1 item, the smallest interesting case, and a
collection with several items&lt;/li&gt;
&lt;li&gt;Dichotomies: Vowels/Non Vowels, even/odd, positive/negative, empty/full, and so on.&lt;/li&gt;
&lt;li&gt;Boundaries: If the function behaves differently for values near a particular threshold, test at that threshold.&lt;/li&gt;
&lt;li&gt;Order: If the function behaves differently when the values are in different orders, identify and test each of those
orders.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://class.coursera.org/programming2-001"&gt;https://class.coursera.org/programming2-001&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>python</category><category>testing</category><guid>http://mattchoplin.com/posts/python-testing-with-unittest.html</guid><pubDate>Wed, 12 Nov 2014 15:02:45 GMT</pubDate></item><item><title>Context Manager in Python</title><link>http://mattchoplin.com/posts/context-manager-in-python.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div&gt;&lt;div class="section" id="the-keyword-with"&gt;
&lt;h2&gt;The keyword &lt;em&gt;with&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;The context manager is going to be used with the keyword &lt;em&gt;with&lt;/em&gt; such as:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_ebc0b2d110484c17b2cb2615e1118e11-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;MyContextManager&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;context_var&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_ebc0b2d110484c17b2cb2615e1118e11-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# here the statement is going to evaluate the methods&lt;/span&gt;
&lt;a name="rest_code_ebc0b2d110484c17b2cb2615e1118e11-3"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# __enter__ and __exit__ of the class MyContextManager.&lt;/span&gt;
&lt;a name="rest_code_ebc0b2d110484c17b2cb2615e1118e11-4"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# The value returned by __enter__ is going to be assigned&lt;/span&gt;
&lt;a name="rest_code_ebc0b2d110484c17b2cb2615e1118e11-5"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# to the variable "context_var".&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="the-context-manager-can-be-defined-as-a-class"&gt;
&lt;h2&gt;The context manager can be defined as a class&lt;/h2&gt;
&lt;p&gt;Two essential methods are required for making the class a context manager:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;em&gt;__enter__(self)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Defines what the context manager should do at the &lt;strong&gt;beginning of the block&lt;/strong&gt; created by the with statement.
Note that the return value of __enter__ is bound to the target of the with statement, or the name after the as.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;em&gt;__exit__(self, exception_type, exception_value, traceback)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Defines what the context manager should do &lt;strong&gt;after its block has been executed (or terminates)&lt;/strong&gt;.
It can be used to handle exceptions, perform cleanup, or do something always done immediately after the action in the block.
If the block executes successfully, exception_type, exception_value, and traceback will be None. Otherwise, you can choose to handle the   exception or let the user handle it; if you want to handle it, make sure __exit__ returns True after all is said and done.
If you don't want the exception to be handled by the context manager, just let it happen.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="example"&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_355d297bfd724bb3a57555753d6a5296-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyContextManager&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_355d297bfd724bb3a57555753d6a5296-2"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__enter__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_355d297bfd724bb3a57555753d6a5296-3"&gt;&lt;/a&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;'__enter__()'&lt;/span&gt;
&lt;a name="rest_code_355d297bfd724bb3a57555753d6a5296-4"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;
&lt;a name="rest_code_355d297bfd724bb3a57555753d6a5296-5"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__exit__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exception_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exception_value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;traceback&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_355d297bfd724bb3a57555753d6a5296-6"&gt;&lt;/a&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;'__exit__()'&lt;/span&gt;
&lt;a name="rest_code_355d297bfd724bb3a57555753d6a5296-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_355d297bfd724bb3a57555753d6a5296-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;MyContextManager&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;context_var&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_355d297bfd724bb3a57555753d6a5296-9"&gt;&lt;/a&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;'Doing work in the context'&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Where the output is:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_ae08e2798cf24086aac25477b92fd272-1"&gt;&lt;/a&gt;__enter__&lt;span class="o"&gt;()&lt;/span&gt;
&lt;a name="rest_code_ae08e2798cf24086aac25477b92fd272-2"&gt;&lt;/a&gt;Doing work in the context
&lt;a name="rest_code_ae08e2798cf24086aac25477b92fd272-3"&gt;&lt;/a&gt;__exit__&lt;span class="o"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="the-context-manager-can-also-be-defined-as-a-generator"&gt;
&lt;h2&gt;The Context Manager can also be defined as a Generator&lt;/h2&gt;
&lt;p&gt;Here, we use the contextlib library and the module contextmanager.&lt;/p&gt;
&lt;p&gt;The equivalent of the example above would be:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_e0642c07c41b4a1bbf0a3ef53995675d-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;contextlib&lt;/span&gt;
&lt;a name="rest_code_e0642c07c41b4a1bbf0a3ef53995675d-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_e0642c07c41b4a1bbf0a3ef53995675d-3"&gt;&lt;/a&gt;&lt;span class="nd"&gt;@contextlib.contextmanager&lt;/span&gt;
&lt;a name="rest_code_e0642c07c41b4a1bbf0a3ef53995675d-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;mycontextmanager&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;a name="rest_code_e0642c07c41b4a1bbf0a3ef53995675d-5"&gt;&lt;/a&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;"__enter__"&lt;/span&gt;
&lt;a name="rest_code_e0642c07c41b4a1bbf0a3ef53995675d-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_e0642c07c41b4a1bbf0a3ef53995675d-7"&gt;&lt;/a&gt;        &lt;span class="k"&gt;yield&lt;/span&gt;
&lt;a name="rest_code_e0642c07c41b4a1bbf0a3ef53995675d-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_e0642c07c41b4a1bbf0a3ef53995675d-9"&gt;&lt;/a&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;"__exit__"&lt;/span&gt;
&lt;a name="rest_code_e0642c07c41b4a1bbf0a3ef53995675d-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_e0642c07c41b4a1bbf0a3ef53995675d-11"&gt;&lt;/a&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;mycontextmanager&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;context_var&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_e0642c07c41b4a1bbf0a3ef53995675d-12"&gt;&lt;/a&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;'Doing work in the context'&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;First we use the decorator &lt;em&gt;@contextmanager&lt;/em&gt; to indicate to Python that the function will be a context manager.&lt;/p&gt;
&lt;p&gt;Then, we do a &lt;em&gt;try/finally&lt;/em&gt; (it is not automatic like with __enter__ and __exit__).&lt;/p&gt;
&lt;p&gt;The word &lt;em&gt;yield&lt;/em&gt; split the code in two parts:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;everything that is before  &lt;em&gt;yield&lt;/em&gt; is similar to what we had above in  &lt;em&gt;__enter__&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;everything that is after is similar to &lt;em&gt;__exit__&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The content (the returned value) of &lt;em&gt;yield&lt;/em&gt; is taken in the variable 'context_var' here defined with the key word &lt;em&gt;as&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>python</category><guid>http://mattchoplin.com/posts/context-manager-in-python.html</guid><pubDate>Sat, 11 Oct 2014 12:50:58 GMT</pubDate></item></channel></rss>