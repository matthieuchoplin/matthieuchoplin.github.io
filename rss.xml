<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Standing on the shoulders of giants</title><link>http://mattchoplin.com/</link><description>Blog about my developer experience</description><language>en</language><lastBuildDate>Wed, 24 Sep 2014 23:24:27 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Sentry installation</title><link>http://mattchoplin.com/posts/sentry-installation.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;p&gt;Create a directory called sentry:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="c"&gt;# mkdir /opt/sentry &amp;amp;&amp;amp; cd /opt/sentry&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Create a virtual environment and activate it:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="c"&gt;# virtualenv sentry &amp;amp;&amp;amp; source /opt/sentry/sentry/bin/activate&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Install Sentry:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="c"&gt;# easy_install -UZ sentry[postgres]
# easy_install -UZ sentry&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Initialize the conifguration&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="c"&gt;# sentry init /opt/sentry/sentry.conf.py&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;In the configuration file /opt/sentry/sentry.conf.py, you are going to change:&lt;/p&gt;
&lt;ul class="simple"&gt;&lt;li&gt;the database configuration such as:&lt;/li&gt;
&lt;/ul&gt;&lt;pre class="code python literal-block"&gt;
&lt;span class="n"&gt;DATABASES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s"&gt;'ENGINE'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'django.db.backends.postgresql_psycopg2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;'NAME'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'sentry'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;'USER'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'sentry'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;'PASSWORD'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'sentry'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;'HOST'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'localhost'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;'PORT'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="p"&gt;}&lt;/span&gt;
           &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;ul class="simple"&gt;&lt;li&gt;And the url:&lt;/li&gt;
&lt;/ul&gt;&lt;pre class="code python literal-block"&gt;
&lt;span class="n"&gt;SENTRY_URL_PREFIX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'http://192.168.50.4:9000'&lt;/span&gt; &lt;span class="c"&gt;# the ip address of the server&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Install postgresql&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="c"&gt;# apt-get install postgresql-9.3&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Create a user for sentry:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="c"&gt;# sudo su postgres
&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;createuser sentry
&lt;span class="nv"&gt;$ &lt;/span&gt;psql template1
&lt;span class="c"&gt;# alter role sentry with password 'sentry';&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Create the database as postgres:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="c"&gt;# createdb -E utf-8 sentry&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Create the initial schema using the upgrade command as root:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="c"&gt;# sentry --config=/opt/sentry/sentry.conf.py upgrade&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;If you did not create the user on the first run, you can correct this by doing the following:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="c"&gt;# sentry --config=/opt/sentry/sentry.conf.py createsuperuser
# sentry --config=/opt/sentry/sentry.conf.py repair --owner=sentry&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;You can start Sentry with:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="c"&gt;# sentry --config=/opt/sentry/sentry.conf.py start&lt;/span&gt;
&lt;/pre&gt;</description><guid>http://mattchoplin.com/posts/sentry-installation.html</guid><pubDate>Wed, 24 Sep 2014 21:03:47 GMT</pubDate></item><item><title>Associate hostname with IP address</title><link>http://mattchoplin.com/posts/associate-hostname-with-ip-address.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;p&gt;You can do that in the /etc/hosts file:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
127.0.0.1       localhost
192.168.1.10    foo.mydomain.org       foo
192.168.1.13    bar.mydomain.org       bar
146.82.138.7    master.debian.org      master
209.237.226.90  www.opensource.org
&lt;/pre&gt;
&lt;p&gt;So, from the command line, you can do:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
ping foo.mydomain.org
&lt;/pre&gt;
&lt;p&gt;Or:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
ssh user@foo
&lt;/pre&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://linux.die.net/man/5/hosts"&gt;http://linux.die.net/man/5/hosts&lt;/a&gt;&lt;/p&gt;</description><guid>http://mattchoplin.com/posts/associate-hostname-with-ip-address.html</guid><pubDate>Wed, 24 Sep 2014 09:37:55 GMT</pubDate></item><item><title>Size occupied on the server</title><link>http://mattchoplin.com/posts/size-occupied-on-the-server.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;p&gt;The following command, executed as &lt;em&gt;root&lt;/em&gt;:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
du -h --max-depth 1 /
&lt;/pre&gt;
&lt;p&gt;will show used space per directory, looking at "/"&lt;/p&gt;</description><guid>http://mattchoplin.com/posts/size-occupied-on-the-server.html</guid><pubDate>Wed, 24 Sep 2014 09:00:51 GMT</pubDate></item><item><title>Introduction to patching in Python</title><link>http://mattchoplin.com/posts/introduction-to-patching-in-python.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;span class="nd"&gt;@patch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'time.sleep'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_do_something&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mock_sleep&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="n"&gt;mock_sleep&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;return_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
   &lt;span class="n"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;test_do_something&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;ok&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;mock&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;patch&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;'ok'&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;'ko'&lt;/span&gt;

&lt;span class="nd"&gt;@patch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'time.sleep'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_do_something&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mock_sleep&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;mock_sleep&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;return_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
    &lt;span class="n"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nd"&gt;@patch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'time.sleep'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_do_something&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mock_sleep&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;mock_sleep&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;return_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
    &lt;span class="n"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;test_do_something&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;ko&lt;/span&gt;</description><guid>http://mattchoplin.com/posts/introduction-to-patching-in-python.html</guid><pubDate>Thu, 18 Sep 2014 15:36:00 GMT</pubDate></item><item><title>Python tips</title><link>http://mattchoplin.com/posts/python-tips.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;p&gt;Ignore escaping characters such as "\"&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
&amp;gt;&amp;gt;&amp;gt; print r""" This is '\myfolder\'"""
&amp;gt;&amp;gt;&amp;gt;  This is '\myfolder\'
&lt;/pre&gt;</description><guid>http://mattchoplin.com/posts/python-tips.html</guid><pubDate>Wed, 17 Sep 2014 09:57:40 GMT</pubDate></item><item><title>Put an emoji icon in your Github commit message</title><link>http://mattchoplin.com/posts/put-an-emoji-icon-in-your-github-commit-message.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;p&gt;Example:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
git commit -m &lt;span class="s1"&gt;'Fixed whatever, time for :beers:'&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;See list of emoji here: &lt;a class="reference external" href="http://scotch.io/bar-talk/emoji-icons-in-github-commit-messages"&gt;http://scotch.io/bar-talk/emoji-icons-in-github-commit-messages&lt;/a&gt;&lt;/p&gt;</description><guid>http://mattchoplin.com/posts/put-an-emoji-icon-in-your-github-commit-message.html</guid><pubDate>Mon, 15 Sep 2014 08:57:45 GMT</pubDate></item><item><title>Port in use</title><link>http://mattchoplin.com/posts/port-in-use.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;p&gt;To find which application is using a specific port, do:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
lsof -i &amp;lt;port-number&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Or list ports with associated processes in use:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
netstat -putln
&lt;/pre&gt;</description><guid>http://mattchoplin.com/posts/port-in-use.html</guid><pubDate>Tue, 09 Sep 2014 08:32:20 GMT</pubDate></item><item><title>Logs</title><link>http://mattchoplin.com/posts/logs.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;p&gt;The configuration and especially right permissions will be done in /etc/rsyslog.conf&lt;/p&gt;
&lt;p&gt;Bitmask is going to be used so use this doc
&lt;a class="reference external" href="http://www.cyberciti.biz/faq/unix-linux-bsd-chmod-numeric-permissions-notation-command/"&gt;http://www.cyberciti.biz/faq/unix-linux-bsd-chmod-numeric-permissions-notation-command/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It will be taken into account for the new log files only when we reload rsylog with this commend:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
/etc/init.d/rsyslog reload
&lt;/pre&gt;
&lt;p&gt;The old files are still on the old configuration. So, you need to change the right access directly for them with chown and chmod.&lt;/p&gt;
&lt;p&gt;Example for vagrant user:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
root@openerp-development:/var/log/openerp# chown vagrant:vagrant /var/log/openerp/ -R
root@openerp-development:/var/log/openerp# chmod a+r /var/log/openerp/ -R
&lt;/pre&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="http://www.rsyslog.com/"&gt;http://www.rsyslog.com/&lt;/a&gt;&lt;/p&gt;</description><guid>http://mattchoplin.com/posts/logs.html</guid><pubDate>Fri, 22 Aug 2014 10:29:21 GMT</pubDate></item><item><title>Screen monitoring</title><link>http://mattchoplin.com/posts/screen-monitoring.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;p&gt;You can use this chrome plugin if you want to monitor different screen with a slideshow: &lt;a class="reference external" href="https://chrome.google.com/webstore/detail/tabcarousel/ddldimidiliclngjipajmjjiakhbcohn?hl=en"&gt;https://chrome.google.com/webstore/detail/tabcarousel/ddldimidiliclngjipajmjjiakhbcohn?hl=en&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For instance, if you want to have a view on your Kanban and on the state of the continuous integration for monitoring if the tests are passing.&lt;/p&gt;</description><category>continuous integration</category><guid>http://mattchoplin.com/posts/screen-monitoring.html</guid><pubDate>Thu, 21 Aug 2014 09:44:17 GMT</pubDate></item><item><title>Execute sql from file</title><link>http://mattchoplin.com/posts/execute-sql-from-file.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;pre class="code sql literal-block"&gt;
&lt;span class="n"&gt;psql&lt;/span&gt; &lt;span class="n"&gt;yourdatabase&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;path_of_your_file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;sql&lt;/span&gt;
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;</description><category>postgresql</category><guid>http://mattchoplin.com/posts/execute-sql-from-file.html</guid><pubDate>Wed, 13 Aug 2014 13:56:53 GMT</pubDate></item></channel></rss>