<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Standing on the shoulders of giants</title><link>http://mattchoplin.com/</link><description>Blog about my developer experience</description><atom:link href="http://mattchoplin.com/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Fri, 11 Dec 2020 10:22:51 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Running tests using the Contexts python library in Pycharm</title><link>http://mattchoplin.com/posts/running-tests-using-the-contexts-python-library-in-pycharm/</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div&gt;&lt;p&gt;Using:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Pycharm CE: &lt;a class="reference external" href="https://www.jetbrains.com/pycharm/download/"&gt;https://www.jetbrains.com/pycharm/download/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Contexts: &lt;a class="reference external" href="https://github.com/benjamin-hodgson/Contexts"&gt;https://github.com/benjamin-hodgson/Contexts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="create-a-new-external-tool"&gt;
&lt;h2&gt;1) Create a new External Tool&lt;/h2&gt;
&lt;p&gt;In Pycharm, go to: Settings/Tools/External Tools&lt;/p&gt;
&lt;p&gt;Create a new Tool:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;"Name": give a distinct name&lt;/li&gt;
&lt;li&gt;"Program": give the path of where &lt;em&gt;run-contexts&lt;/em&gt; is in the path where the python interpreter is located for the project (typically a virtual environment)&lt;/li&gt;
&lt;li&gt;"Arguments": click on "Insert Macro" for this field and select "SelectedText"&lt;/li&gt;
&lt;li&gt;"Working directory": Where the python project is&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="create-a-new-keymap"&gt;
&lt;h2&gt;2) Create a new Keymap&lt;/h2&gt;
&lt;p&gt;In Pycharm, go to: Settings/Keymap&lt;/p&gt;
&lt;p&gt;Search for the "Name" you have defined in 1), select the "External Tool" that you have just created and double click to "Add Keyboard Shortcut", eg "Alt+r"&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="run-tests"&gt;
&lt;h2&gt;3) Run tests&lt;/h2&gt;
&lt;p&gt;Now you can run the tests that you are currently on by pressing the Keymap you have defined in 2), eg "Alt+r" here&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><guid>http://mattchoplin.com/posts/running-tests-using-the-contexts-python-library-in-pycharm/</guid><pubDate>Fri, 07 Jun 2019 09:34:06 GMT</pubDate></item><item><title>String in python2 vs python3</title><link>http://mattchoplin.com/posts/string-in-python2-vs-python3/</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div class="section" id="difference-between-basestring-and-str-in-python"&gt;
&lt;h2&gt;Difference between &lt;em&gt;basestring&lt;/em&gt; and &lt;em&gt;str&lt;/em&gt; in python&lt;/h2&gt;
&lt;p&gt;In Python versions prior to 3.0 there are two kinds of strings "plain strings" and "unicode strings". Plain strings (str) cannot represent characters outside of the Latin alphabet (ignoring details of code pages for simplicity). Unicode strings (unicode) can represent characters from any alphabet including some fictional ones like Klingon.&lt;/p&gt;
&lt;p&gt;So why have two kinds of strings, would it not be better to just have Unicode since that would cover all the cases? Well it is better to have only Unicode but Python was created before Unicode was the preferred method for representing strings. It takes time to transition the string type in a language with many users, in Python 3.0 it is finally the case that all strings are Unicode.&lt;/p&gt;
&lt;p&gt;The inheritance hierarchy of Python strings pre-3.0 is:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_f76b16ff162d4ec89f2b7db5e470652b-1"&gt;&lt;/a&gt; object
&lt;a name="rest_code_f76b16ff162d4ec89f2b7db5e470652b-2"&gt;&lt;/a&gt;    &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a name="rest_code_f76b16ff162d4ec89f2b7db5e470652b-3"&gt;&lt;/a&gt;    &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a name="rest_code_f76b16ff162d4ec89f2b7db5e470652b-4"&gt;&lt;/a&gt;basestring
&lt;a name="rest_code_f76b16ff162d4ec89f2b7db5e470652b-5"&gt;&lt;/a&gt;   / &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_f76b16ff162d4ec89f2b7db5e470652b-6"&gt;&lt;/a&gt;  /   &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_f76b16ff162d4ec89f2b7db5e470652b-7"&gt;&lt;/a&gt;str  unicode
&lt;/pre&gt;&lt;p&gt;'basestring' introduced in Python 2.3 can be thought of as a step in the direction of string unification as it can be used to check whether an object is an instance of str or unicode&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_4d7f4f9a8dfa49a8878d72c5509772f9-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;string1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"I am a plain string"&lt;/span&gt;
&lt;a name="rest_code_4d7f4f9a8dfa49a8878d72c5509772f9-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;string2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s2"&gt;"I am a unicode string"&lt;/span&gt;
&lt;a name="rest_code_4d7f4f9a8dfa49a8878d72c5509772f9-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_4d7f4f9a8dfa49a8878d72c5509772f9-4"&gt;&lt;/a&gt;&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;a name="rest_code_4d7f4f9a8dfa49a8878d72c5509772f9-5"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_4d7f4f9a8dfa49a8878d72c5509772f9-6"&gt;&lt;/a&gt;&lt;span class="bp"&gt;False&lt;/span&gt;
&lt;a name="rest_code_4d7f4f9a8dfa49a8878d72c5509772f9-7"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;unicode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_4d7f4f9a8dfa49a8878d72c5509772f9-8"&gt;&lt;/a&gt;&lt;span class="bp"&gt;False&lt;/span&gt;
&lt;a name="rest_code_4d7f4f9a8dfa49a8878d72c5509772f9-9"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;unicode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_4d7f4f9a8dfa49a8878d72c5509772f9-10"&gt;&lt;/a&gt;&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;a name="rest_code_4d7f4f9a8dfa49a8878d72c5509772f9-11"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;basestring&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_4d7f4f9a8dfa49a8878d72c5509772f9-12"&gt;&lt;/a&gt;&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;a name="rest_code_4d7f4f9a8dfa49a8878d72c5509772f9-13"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;basestring&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_4d7f4f9a8dfa49a8878d72c5509772f9-14"&gt;&lt;/a&gt;&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Source: &lt;a class="reference external" href="https://stackoverflow.com/questions/1979004/what-is-the-difference-between-isinstanceaaa-basestring-and-isinstanceaaa"&gt;https://stackoverflow.com/questions/1979004/what-is-the-difference-between-isinstanceaaa-basestring-and-isinstanceaaa&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</description><category>python</category><guid>http://mattchoplin.com/posts/string-in-python2-vs-python3/</guid><pubDate>Thu, 17 Aug 2017 11:35:28 GMT</pubDate></item><item><title>defaultdict of defaultdict, nested</title><link>http://mattchoplin.com/posts/defaultdict-of-defaultdict-nested/</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div&gt;&lt;p&gt;Creating arbitrary level of nested dictionaries using &lt;a class="reference external" href="https://docs.python.org/2/library/collections.html#collections.defaultdict"&gt;defaultdict&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_2741c760941c4bd5aba1425384cbcbe9-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;collections&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;
&lt;a name="rest_code_2741c760941c4bd5aba1425384cbcbe9-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_2741c760941c4bd5aba1425384cbcbe9-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;recursive_defaultdict&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;a name="rest_code_2741c760941c4bd5aba1425384cbcbe9-4"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;recursive_defaultdict&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_319325d0bdaa4526b594e3cc0f7141a5-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;recursive_defaultdict&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_319325d0bdaa4526b594e3cc0f7141a5-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'b'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'c'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'d'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_319325d0bdaa4526b594e3cc0f7141a5-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="n"&gt;recursive_defaultdict&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mh"&gt;0x7fbf9b0496e0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt;
&lt;a name="rest_code_319325d0bdaa4526b594e3cc0f7141a5-4"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;a name="rest_code_319325d0bdaa4526b594e3cc0f7141a5-5"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_319325d0bdaa4526b594e3cc0f7141a5-6"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"a"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"b"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"c"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"d"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{}}}}}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;With a lambda:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_94cd02215fee40e39ae30a67656a706d-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;recursive_defaultdict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rec_dd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Source: &lt;a class="reference external" href="https://stackoverflow.com/questions/19189274/defaultdict-of-defaultdict-nested"&gt;https://stackoverflow.com/questions/19189274/defaultdict-of-defaultdict-nested&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>defaultdict</category><category>python</category><guid>http://mattchoplin.com/posts/defaultdict-of-defaultdict-nested/</guid><pubDate>Wed, 09 Aug 2017 15:38:01 GMT</pubDate></item><item><title>Python and Google spreadsheet</title><link>http://mattchoplin.com/posts/python-and-google-spreadsheet/</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div class="section" id="interesting-python-libraries-that-you-can-use-for-interacting-with-google-spreadsheet"&gt;
&lt;h2&gt;Interesting python libraries that you can use for interacting with google spreadsheet&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;gspread: see &lt;a class="reference external" href="https://www.twilio.com/blog/2017/02/an-easy-way-to-read-and-write-to-a-google-spreadsheet-in-python.html"&gt;https://www.twilio.com/blog/2017/02/an-easy-way-to-read-and-write-to-a-google-spreadsheet-in-python.html&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/burnash/gspread"&gt;https://github.com/burnash/gspread&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;google-api-python-client: &lt;a class="reference external" href="https://www.youtube.com/watch?v=VLdrgE8iJZI&amp;amp;t=1s"&gt;https://www.youtube.com/watch?v=VLdrgE8iJZI&amp;amp;t=1s&lt;/a&gt; and &lt;a class="reference external" href="https://developers.google.com/sheets/api/quickstart/python?utm_campaign=drive_launch_google_sheets_api_061416&amp;amp;utm_source=gdev&amp;amp;utm_medium=yt-desc"&gt;https://developers.google.com/sheets/api/quickstart/python?utm_campaign=drive_launch_google_sheets_api_061416&amp;amp;utm_source=gdev&amp;amp;utm_medium=yt-desc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description><guid>http://mattchoplin.com/posts/python-and-google-spreadsheet/</guid><pubDate>Tue, 27 Jun 2017 14:08:18 GMT</pubDate></item><item><title>Skype with Python</title><link>http://mattchoplin.com/posts/skype-with-python/</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div&gt;&lt;div class="section" id="create-the-virtualenv"&gt;
&lt;h2&gt;Create the virtualenv&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_353844aeedbe4bc28e5938794edfe01a-1"&gt;&lt;/a&gt;virtualenv skype_venv -p /usr/bin/python2.7 --system-site-packages
&lt;/pre&gt;&lt;p&gt;Note that I am specyfying the python2 interpreter, and using the system site packages (&lt;a class="reference external" href="https://virtualenv.pypa.io/en/stable/userguide/#the-system-site-packages-option/"&gt;the python libraries already installed&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="install-the-skype4py-library"&gt;
&lt;h2&gt;Install the Skype4Py library&lt;/h2&gt;
&lt;p&gt;You can install it with pip.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_fc57bf579ec24c6a933ffe9e7098998b-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;source&lt;/span&gt; skype_venv/bin/activate
&lt;a name="rest_code_fc57bf579ec24c6a933ffe9e7098998b-2"&gt;&lt;/a&gt;pip install Skype4Py
&lt;/pre&gt;&lt;p&gt;Note that this library allows us to control Skype client application. It means that you will need to have a skype client installed with which you will interact using python.&lt;/p&gt;
&lt;p&gt;Source: &lt;a class="reference external" href="https://pypi.python.org/pypi/Skype4Py/"&gt;https://pypi.python.org/pypi/Skype4Py/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="use-the-library"&gt;
&lt;h2&gt;Use the library&lt;/h2&gt;
&lt;p&gt;Open your skype client and launch a python prompt&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_62102f104581450cabc94cd56cb34fe8-1"&gt;&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt; import Skype4Py
&lt;a name="rest_code_62102f104581450cabc94cd56cb34fe8-2"&gt;&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span class="nv"&gt;skype&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Skype4Py.Skype&lt;span class="o"&gt;()&lt;/span&gt;
&lt;a name="rest_code_62102f104581450cabc94cd56cb34fe8-3"&gt;&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt; skype.Attach&lt;span class="o"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;At this point, the Skype client will ask for authorization:&lt;/p&gt;
&lt;img alt="Skype4Py authorisation" class="well-large align-center" src="http://imgur.com/gKj46yz.png"&gt;
&lt;p&gt;And now, you can for example get the list of all your contacts:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_65b324f710674c73a24ae86da10a496f-1"&gt;&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt; print &lt;span class="s1"&gt;'Your full name:'&lt;/span&gt;, skype.CurrentUser.FullName
&lt;a name="rest_code_65b324f710674c73a24ae86da10a496f-2"&gt;&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt; print &lt;span class="s1"&gt;'Your contacts:'&lt;/span&gt;
&lt;a name="rest_code_65b324f710674c73a24ae86da10a496f-3"&gt;&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span class="k"&gt;for&lt;/span&gt; user in skype.Friends:
&lt;a name="rest_code_65b324f710674c73a24ae86da10a496f-4"&gt;&lt;/a&gt;        print &lt;span class="s1"&gt;'    '&lt;/span&gt;, user.FullName
&lt;/pre&gt;&lt;p&gt;To go further:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://leakforums.net/thread-641974?tid=641974&amp;amp;&amp;amp;tid=641974&amp;amp;&amp;amp;pq=2"&gt;https://leakforums.net/thread-641974?tid=641974&amp;amp;&amp;amp;tid=641974&amp;amp;&amp;amp;pq=2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://sinister.ly/Thread-Tutorial-Create-your-own-SkypeBOT"&gt;https://sinister.ly/Thread-Tutorial-Create-your-own-SkypeBOT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://media.readthedocs.org/pdf/sevabot-skype-bot/latest/sevabot-skype-bot.pdf"&gt;https://media.readthedocs.org/pdf/sevabot-skype-bot/latest/sevabot-skype-bot.pdf&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>skype</category><guid>http://mattchoplin.com/posts/skype-with-python/</guid><pubDate>Sat, 17 Jun 2017 09:28:07 GMT</pubDate></item><item><title>Using pip with different python versions</title><link>http://mattchoplin.com/posts/using-pip-with-different-python-versions/</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div class="section" id="using-pip-with-different-python-version"&gt;
&lt;h2&gt;Using pip with different python version&lt;/h2&gt;
&lt;p&gt;Let us say that you have python2 and python3 installed.&lt;/p&gt;
&lt;p&gt;Use pip for python2&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_91ac950835cf42ee9d6b084ef7e52cc9-1"&gt;&lt;/a&gt;pip2.6 install otherpackage
&lt;a name="rest_code_91ac950835cf42ee9d6b084ef7e52cc9-2"&gt;&lt;/a&gt;pip2.7 install mybarpackage
&lt;/pre&gt;&lt;p&gt;You can see which version of python pip is using by default with:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_a7e1e53fb5ee4becbb1120944c8a2520-1"&gt;&lt;/a&gt;pip -V
&lt;/pre&gt;&lt;p&gt;Source: &lt;a class="reference external" href="http://stackoverflow.com/questions/6504810/how-to-install-lxml-on-ubuntu?answertab=votes#tab-top"&gt;http://stackoverflow.com/questions/6504810/how-to-install-lxml-on-ubuntu?answertab=votes#tab-top&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid>http://mattchoplin.com/posts/using-pip-with-different-python-versions/</guid><pubDate>Fri, 28 Apr 2017 10:33:19 GMT</pubDate></item><item><title>Introspection in python</title><link>http://mattchoplin.com/posts/introspection-in-python/</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div class="section" id="introspection-in-python"&gt;
&lt;h2&gt;Introspection in python&lt;/h2&gt;
&lt;p&gt;Imagine that you are debugging and that you want to know the methods that you can call on an object, this pseudo code can be helpful. Here "some_object" is any python object:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_09c135af02d340d481fe794a8a584e6f-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;some_object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;callable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;some_object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Source: &lt;a class="reference external" href="http://www.diveintopython.net/power_of_introspection/index.html"&gt;http://www.diveintopython.net/power_of_introspection/index.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid>http://mattchoplin.com/posts/introspection-in-python/</guid><pubDate>Tue, 25 Apr 2017 11:43:16 GMT</pubDate></item><item><title>How to get the first/last day of the previous month?</title><link>http://mattchoplin.com/posts/how-to-get-the-firstlast-day-of-the-previous-month/</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div class="section" id="how-to-get-first-last-day-of-the-previous-month"&gt;
&lt;h2&gt;How to get first/last day of the previous month?&lt;/h2&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_54c538ea72ba495dbdbbd5cc45843116-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;
&lt;a name="rest_code_54c538ea72ba495dbdbbd5cc45843116-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dateutil.relativedelta&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;relativedelta&lt;/span&gt;
&lt;a name="rest_code_54c538ea72ba495dbdbbd5cc45843116-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;today&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_54c538ea72ba495dbdbbd5cc45843116-4"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;today&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;relativedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;months&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_54c538ea72ba495dbdbbd5cc45843116-5"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_54c538ea72ba495dbdbbd5cc45843116-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_54c538ea72ba495dbdbbd5cc45843116-7"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;relativedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;days&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_54c538ea72ba495dbdbbd5cc45843116-8"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_54c538ea72ba495dbdbbd5cc45843116-9"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><guid>http://mattchoplin.com/posts/how-to-get-the-firstlast-day-of-the-previous-month/</guid><pubDate>Wed, 05 Apr 2017 15:55:47 GMT</pubDate></item><item><title>Abstraction in python</title><link>http://mattchoplin.com/posts/abstraction-in-python/</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div class="section" id="abstraction-in-python"&gt;
&lt;h2&gt;Abstraction in python&lt;/h2&gt;
&lt;p&gt;For example, when copying files:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_8c4daf64b7214162ae3a9e9465ff09b3-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;shutil&lt;/span&gt;
&lt;a name="rest_code_8c4daf64b7214162ae3a9e9465ff09b3-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;shutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'file.txt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'copy.txt'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;It is much more abstract (and simpler) to use the &lt;em&gt;shutil&lt;/em&gt; library than:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_19afd1c6ba054597b55a062e4a63ceb3-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'rb'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fsrc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_19afd1c6ba054597b55a062e4a63ceb3-2"&gt;&lt;/a&gt;    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'wb'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fdst&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_19afd1c6ba054597b55a062e4a63ceb3-3"&gt;&lt;/a&gt;        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_19afd1c6ba054597b55a062e4a63ceb3-4"&gt;&lt;/a&gt;            &lt;span class="n"&gt;buf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fsrc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buf_size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_19afd1c6ba054597b55a062e4a63ceb3-5"&gt;&lt;/a&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_19afd1c6ba054597b55a062e4a63ceb3-6"&gt;&lt;/a&gt;                &lt;span class="k"&gt;break&lt;/span&gt;
&lt;a name="rest_code_19afd1c6ba054597b55a062e4a63ceb3-7"&gt;&lt;/a&gt;            &lt;span class="n"&gt;fdst&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><guid>http://mattchoplin.com/posts/abstraction-in-python/</guid><pubDate>Tue, 04 Apr 2017 11:43:16 GMT</pubDate></item><item><title>Sorting a list with two criteria in python</title><link>http://mattchoplin.com/posts/sorting-list-with-two-criteria/</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div&gt;&lt;p&gt;We want to sort a list of elements with the first element in ascending order and the second element in descending order.&lt;/p&gt;
&lt;div class="section" id="using-the-lambda-function"&gt;
&lt;h2&gt;Using the lambda function:&lt;/h2&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_8d9255fed0da4941aa667baee99c001c-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;occurences&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'bat'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'mat'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'cat'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_8d9255fed0da4941aa667baee99c001c-2"&gt;&lt;/a&gt;&lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;occurences&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;The -x[1] is for the reversed sort.&lt;/p&gt;
&lt;p&gt;By order of priority, we first sort with the 2nd element (x[1]), then with the 1st element (x[0])&lt;/p&gt;
&lt;p&gt;Example for an interview question:&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>python</category><guid>http://mattchoplin.com/posts/sorting-list-with-two-criteria/</guid><pubDate>Sun, 11 Dec 2016 10:26:07 GMT</pubDate></item></channel></rss>