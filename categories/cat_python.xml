<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Standing on the shoulders of giants (Posts about python)</title><link>http://mattchoplin.com/</link><description></description><atom:link rel="self" href="http://mattchoplin.com/categories/cat_python.xml" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Thu, 17 Aug 2017 11:41:05 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>String in python2 vs python3</title><link>http://mattchoplin.com/posts/string-in-python2-vs-python3.html</link><dc:creator>Matthieu Choplin</dc:creator><description>&lt;div&gt;&lt;p&gt;In Python versions prior to 3.0 there are two kinds of strings "plain strings" and "unicode strings". Plain strings (str) cannot represent characters outside of the Latin alphabet (ignoring details of code pages for simplicity). Unicode strings (unicode) can represent characters from any alphabet including some fictional ones like Klingon.&lt;/p&gt;
&lt;p&gt;So why have two kinds of strings, would it not be better to just have Unicode since that would cover all the cases? Well it is better to have only Unicode but Python was created before Unicode was the preferred method for representing strings. It takes time to transition the string type in a language with many users, in Python 3.0 it is finally the case that all strings are Unicode.&lt;/p&gt;
&lt;p&gt;The inheritance hierarchy of Python strings pre-3.0 is:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_b39858ebd9704c30ae9580c0aec7bee5-1"&gt;&lt;/a&gt; object
&lt;a name="rest_code_b39858ebd9704c30ae9580c0aec7bee5-2"&gt;&lt;/a&gt;    &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a name="rest_code_b39858ebd9704c30ae9580c0aec7bee5-3"&gt;&lt;/a&gt;    &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a name="rest_code_b39858ebd9704c30ae9580c0aec7bee5-4"&gt;&lt;/a&gt;basestring
&lt;a name="rest_code_b39858ebd9704c30ae9580c0aec7bee5-5"&gt;&lt;/a&gt;   / &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_b39858ebd9704c30ae9580c0aec7bee5-6"&gt;&lt;/a&gt;  /   &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_b39858ebd9704c30ae9580c0aec7bee5-7"&gt;&lt;/a&gt;str  unicode
&lt;/pre&gt;&lt;p&gt;'basestring' introduced in Python 2.3 can be thought of as a step in the direction of string unification as it can be used to check whether an object is an instance of str or unicode&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_8dcae8b5ebd94c4b9107be16e6c7ef64-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;string1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"I am a plain string"&lt;/span&gt;
&lt;a name="rest_code_8dcae8b5ebd94c4b9107be16e6c7ef64-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;string2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s2"&gt;"I am a unicode string"&lt;/span&gt;
&lt;a name="rest_code_8dcae8b5ebd94c4b9107be16e6c7ef64-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_8dcae8b5ebd94c4b9107be16e6c7ef64-4"&gt;&lt;/a&gt;&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;a name="rest_code_8dcae8b5ebd94c4b9107be16e6c7ef64-5"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_8dcae8b5ebd94c4b9107be16e6c7ef64-6"&gt;&lt;/a&gt;&lt;span class="bp"&gt;False&lt;/span&gt;
&lt;a name="rest_code_8dcae8b5ebd94c4b9107be16e6c7ef64-7"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;unicode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_8dcae8b5ebd94c4b9107be16e6c7ef64-8"&gt;&lt;/a&gt;&lt;span class="bp"&gt;False&lt;/span&gt;
&lt;a name="rest_code_8dcae8b5ebd94c4b9107be16e6c7ef64-9"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;unicode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_8dcae8b5ebd94c4b9107be16e6c7ef64-10"&gt;&lt;/a&gt;&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;a name="rest_code_8dcae8b5ebd94c4b9107be16e6c7ef64-11"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;basestring&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_8dcae8b5ebd94c4b9107be16e6c7ef64-12"&gt;&lt;/a&gt;&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;a name="rest_code_8dcae8b5ebd94c4b9107be16e6c7ef64-13"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;basestring&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_8dcae8b5ebd94c4b9107be16e6c7ef64-14"&gt;&lt;/a&gt;&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Source: &lt;a class="reference external" href="https://stackoverflow.com/questions/1979004/what-is-the-difference-between-isinstanceaaa-basestring-and-isinstanceaaa"&gt;https://stackoverflow.com/questions/1979004/what-is-the-difference-between-isinstanceaaa-basestring-and-isinstanceaaa&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>python</category><guid>http://mattchoplin.com/posts/string-in-python2-vs-python3.html</guid><pubDate>Thu, 17 Aug 2017 11:35:28 GMT</pubDate></item></channel></rss>